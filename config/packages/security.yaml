security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        jwt_user_provider:
            id: App\Security\JwtUserProvider

    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        refresh_token:
            pattern: ^/api/token/refresh
            stateless: true
            refresh_jwt: ~

        api:
            pattern: ^/api
            stateless: true
            provider: jwt_user_provider
            jwt: ~
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
